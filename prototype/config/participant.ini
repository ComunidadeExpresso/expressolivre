service = PostgreSQL
PostgreSQL.concept = calendar_participant

[model.hasOne]
delegatedFrom = participant.delegateTo
delegateTo = participant.delegatedFrom

[model.hasMany]
alarms = alarm.participant

[model.depends]
user = user.participants
schedulable = schedulable.participants

[after.find]
deepnessFindParticipant = modules/calendar/interceptors/DBMapping.php

[after.read]
deepnessReadParticipant = modules/calendar/interceptors/DBMapping.php

[after.create]
createParticipantHistoric = modules/calendar/interceptors/DBMapping.php
autoImportCalendar = modules/calendar/interceptors/DBMapping.php

[before.create]
encodeCreateParticipant = modules/calendar/interceptors/DBMapping.php

[before.delete]
prepareParticipantHistoric = modules/calendar/interceptors/DBMapping.php
deleteParticipant = modules/calendar/interceptors/Notifications.php

[after.delete]
removeParticipantHistoric = modules/calendar/interceptors/DBMapping.php

[after.commit]
commitParticipant = modules/calendar/interceptors/Notifications.php


[PostgreSQL.mapping]
id = id
delegatedFrom = delegated_from
isOrganizer = is_organizer
isExternal = is_external
status = participant_status_id
schedulable = object_id
user = user_info_id
acl = acl
receiveNotification = receive_notification